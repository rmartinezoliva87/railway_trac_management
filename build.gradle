plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.5'
    id 'io.spring.dependency-management' version '1.1.4'
    id 'jacoco'
}

group = 'com.fisagrp'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '17'
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.projectlombok:lombok:1.18.22'
    implementation 'jakarta.validation:jakarta.validation-api:3.0.1'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    implementation group: 'org.springdoc', name: 'springdoc-openapi-starter-webmvc-ui', version: '2.0.3'
    implementation 'org.springframework.boot:spring-boot-starter-actuator:3.2.5'
    implementation 'org.springframework.boot:spring-boot-starter'
    annotationProcessor 'org.projectlombok:lombok:1.18.22'

    //Test
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.mockito:mockito-core:3.12.4'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework:spring-test'

    implementation 'org.jacoco:org.jacoco.core:0.8.7'
}


jacoco {
    toolVersion = "0.8.8"
    reportsDirectory.set(file("$buildDir/reports"))
}




tasks.jacocoTestReport {
    dependsOn(tasks.test)
    reports {
        xml.required.set(true)
        xml.outputLocation.set(file("$buildDir/reports/jacoco.xml"))
        csv.required.set(false)
        html.outputLocation.set(file("$buildDir/reports/jacocoHtml"))
    }
}


tasks.named('test') {
    useJUnitPlatform()
}
